class Smart404_postTypes{constructor(t){this.table=t,this.updatesArr=[],this.types=this.table.querySelectorAll("tbody tr"),this.updateBtn=this.table.querySelector(".update-btn"),this.init()}init(){this.setSwitchers(),this.switcherAjax()}setSwitchers(){this.types.forEach(e=>{e.switcher=e.querySelector(".switcher-wrapper .switcher"),e.post_type=e.querySelector("td").innerHTML,e.switcher&&(e.switcher.callback=()=>{var t;this.updatesArr.includes(e.post_type)?(t=this.updatesArr.indexOf(e.post_type),this.updatesArr.splice(t,1)):this.updatesArr.push(e.post_type),this.updatesArr.length?this.updateBtn.classList.add("active"):this.updateBtn.classList.remove("active")})})}getSwitcherValues(){let e=[];return this.table.querySelectorAll(".switcher.active").forEach(t=>{t=t.closest("tr");e.push(t.post_type)}),e}switcherAjax(){const t=new XMLHttpRequest,e=new FormData;e.append("action","sm404_post_types"),e.append("data",[]),this.updateBtn.addEventListener("click",()=>{e.set("data",JSON.stringify(this.getSwitcherValues())),t.open("POST",ajaxurl+"?action=sm404_post_types"),t.send(e)}),t.onreadystatechange=()=>{4===t.readyState&&200===t.status&&window.location.reload()}}}export{Smart404_postTypes};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnQ0MDRfcG9zdFR5cGVzLmpzIiwic291cmNlcyI6WyJzbWFydDQwNF9wb3N0VHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFNtYXJ0NDA0X3Bvc3RUeXBlc3tcclxuICAgIGNvbnN0cnVjdG9yKHRhYmxlKSB7XHJcbiAgICAgICAgdGhpcy50YWJsZSA9IHRhYmxlO1xyXG4gICAgICAgIHRoaXMudXBkYXRlc0FyciA9IFtdXHJcbiAgICAgICAgdGhpcy50eXBlcyA9IHRoaXMudGFibGUucXVlcnlTZWxlY3RvckFsbChcInRib2R5IHRyXCIpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlQnRuID0gdGhpcy50YWJsZS5xdWVyeVNlbGVjdG9yKFwiLnVwZGF0ZS1idG5cIik7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcblxyXG4gICAgfVxyXG4gICAgaW5pdCgpe1xyXG4gICAgICAgIHRoaXMuc2V0U3dpdGNoZXJzKCk7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hlckFqYXgoKTtcclxuICAgIH1cclxuICAgIHNldFN3aXRjaGVycygpe1xyXG4gICAgICAgIHRoaXMudHlwZXMuZm9yRWFjaCh0eXBlPT57XHJcbiAgICAgICAgICAgIHR5cGUuc3dpdGNoZXIgPSB0eXBlLnF1ZXJ5U2VsZWN0b3IoXCIuc3dpdGNoZXItd3JhcHBlciAuc3dpdGNoZXJcIik7XHJcbiAgICAgICAgICAgIHR5cGUucG9zdF90eXBlID0gdHlwZS5xdWVyeVNlbGVjdG9yKFwidGRcIikuaW5uZXJIVE1MO1xyXG4gICAgICAgICAgICBpZih0eXBlLnN3aXRjaGVyKXtcclxuICAgICAgICAgICAgICAgIHR5cGUuc3dpdGNoZXIuY2FsbGJhY2sgPSAoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMudXBkYXRlc0Fyci5pbmNsdWRlcyh0eXBlLnBvc3RfdHlwZSkpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLnVwZGF0ZXNBcnIuaW5kZXhPZih0eXBlLnBvc3RfdHlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlc0Fyci5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZXNBcnIucHVzaCh0eXBlLnBvc3RfdHlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKHRoaXMudXBkYXRlc0Fyci5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUJ0bi5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy9nZXQgc3dpdGNoZXIgdmFsdWVzXHJcbiAgICBnZXRTd2l0Y2hlclZhbHVlcygpe1xyXG4gICAgICAgIGxldCByZXN1bHRzID0gW107XHJcbiAgICAgICAgdGhpcy50YWJsZS5xdWVyeVNlbGVjdG9yQWxsKFwiLnN3aXRjaGVyLmFjdGl2ZVwiKS5mb3JFYWNoKGFjdGl2ZT0+e1xyXG4gICAgICAgICAgICBsZXQgdHlwZSA9IGFjdGl2ZS5jbG9zZXN0KFwidHJcIik7XHJcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCh0eXBlLnBvc3RfdHlwZSlcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0cztcclxuICAgIH1cclxuICAgIC8vc2V0dGluZyBhamF4IHJlcXVlc3QgZm9yIHVwZGF0ZVxyXG4gICAgc3dpdGNoZXJBamF4KCl7XHJcbiAgICAgICAgY29uc3QgeG1sID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGRhdGEuYXBwZW5kKFwiYWN0aW9uXCIsIFwic200MDRfcG9zdF90eXBlc1wiKTtcclxuICAgICAgICBkYXRhLmFwcGVuZChcImRhdGFcIiwgW10pO1xyXG4gICAgICAgIHRoaXMudXBkYXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57XHJcbiAgICAgICAgICAgIGRhdGEuc2V0KFwiZGF0YVwiLCBKU09OLnN0cmluZ2lmeSh0aGlzLmdldFN3aXRjaGVyVmFsdWVzKCkpKVxyXG4gICAgICAgICAgICB4bWwub3BlbihcIlBPU1RcIiwgYWpheHVybCArIFwiP2FjdGlvbj1zbTQwNF9wb3N0X3R5cGVzXCIpO1xyXG4gICAgICAgICAgICB4bWwuc2VuZChkYXRhKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHhtbC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKT0+e1xyXG4gICAgICAgICAgICBpZih4bWwucmVhZHlTdGF0ZSA9PT0gNCl7XHJcbiAgICAgICAgICAgICAgICBpZih4bWwuc3RhdHVzID09PSAyMDApe1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXSwibmFtZXMiOlsiU21hcnQ0MDRfcG9zdFR5cGVzIiwiY29uc3RydWN0b3IiLCJ0YWJsZSIsInRoaXMiLCJ1cGRhdGVzQXJyIiwidHlwZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidXBkYXRlQnRuIiwicXVlcnlTZWxlY3RvciIsImluaXQiLCJzZXRTd2l0Y2hlcnMiLCJzd2l0Y2hlckFqYXgiLCJmb3JFYWNoIiwidHlwZSIsInN3aXRjaGVyIiwicG9zdF90eXBlIiwiaW5uZXJIVE1MIiwiY2FsbGJhY2siLCJpbmRleCIsImluY2x1ZGVzIiwiaW5kZXhPZiIsInNwbGljZSIsInB1c2giLCJsZW5ndGgiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJnZXRTd2l0Y2hlclZhbHVlcyIsImxldCIsInJlc3VsdHMiLCJhY3RpdmUiLCJjbG9zZXN0IiwieG1sIiwiWE1MSHR0cFJlcXVlc3QiLCJkYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJhZGRFdmVudExpc3RlbmVyIiwic2V0IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9wZW4iLCJhamF4dXJsIiwic2VuZCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCJdLCJtYXBwaW5ncyI6Ik1BQWFBLG1CQUNUQyxZQUFZQyxHQUNSQyxLQUFLRCxNQUFRQSxFQUNiQyxLQUFLQyxXQUFhLEdBQ2xCRCxLQUFLRSxNQUFRRixLQUFLRCxNQUFNSSxpQkFBaUIsVUFBVSxFQUNuREgsS0FBS0ksVUFBWUosS0FBS0QsTUFBTU0sY0FBYyxhQUFhLEVBQ3ZETCxLQUFLTSxLQUFLLENBRWQsQ0FDQUEsT0FDSU4sS0FBS08sYUFBYSxFQUNsQlAsS0FBS1EsYUFBYSxDQUN0QixDQUNBRCxlQUNJUCxLQUFLRSxNQUFNTyxRQUFRQyxJQUNmQSxFQUFLQyxTQUFXRCxFQUFLTCxjQUFjLDZCQUE2QixFQUNoRUssRUFBS0UsVUFBWUYsRUFBS0wsY0FBYyxJQUFJLEVBQUVRLFVBQ3ZDSCxFQUFLQyxXQUNKRCxFQUFLQyxTQUFTRyxTQUFXLEtBQ3JCLElBQ1FDLEVBRExmLEtBQUtDLFdBQVdlLFNBQVNOLEVBQUtFLFNBQVMsR0FDbENHLEVBQVFmLEtBQUtDLFdBQVdnQixRQUFRUCxFQUFLRSxTQUFTLEVBQ2xEWixLQUFLQyxXQUFXaUIsT0FBT0gsRUFBTyxDQUFDLEdBRS9CZixLQUFLQyxXQUFXa0IsS0FBS1QsRUFBS0UsU0FBUyxFQUVwQ1osS0FBS0MsV0FBV21CLE9BQ2ZwQixLQUFLSSxVQUFVaUIsVUFBVUMsSUFBSSxRQUFRLEVBRXJDdEIsS0FBS0ksVUFBVWlCLFVBQVVFLE9BQU8sUUFBUSxDQUVoRCxFQUVSLENBQUMsQ0FDTCxDQUdBQyxvQkFDSUMsSUFBSUMsRUFBVSxHQUtkLE9BSkExQixLQUFLRCxNQUFNSSxpQkFBaUIsa0JBQWtCLEVBQUVNLFFBQVFrQixJQUNoRGpCLEVBQU9pQixFQUFPQyxRQUFRLElBQUksRUFDOUJGLEVBQVFQLEtBQUtULEVBQUtFLFNBQVMsQ0FDL0IsQ0FBQyxFQUNNYyxDQUNYLENBRUFsQixlQUNJLE1BQU1xQixFQUFNLElBQUlDLGVBQ1ZDLEVBQU8sSUFBSUMsU0FDakJELEVBQUtFLE9BQU8sU0FBVSxrQkFBa0IsRUFDeENGLEVBQUtFLE9BQU8sT0FBUSxFQUFFLEVBQ3RCakMsS0FBS0ksVUFBVThCLGlCQUFpQixRQUFRLEtBQ3BDSCxFQUFLSSxJQUFJLE9BQVFDLEtBQUtDLFVBQVVyQyxLQUFLd0Isa0JBQWtCLENBQUMsQ0FBQyxFQUN6REssRUFBSVMsS0FBSyxPQUFRQyxRQUFVLDBCQUEwQixFQUNyRFYsRUFBSVcsS0FBS1QsQ0FBSSxDQUNqQixDQUFDLEVBQ0RGLEVBQUlZLG1CQUFxQixLQUNDLElBQW5CWixFQUFJYSxZQUNlLE1BQWZiLEVBQUljLFFBQ0hDLE9BQU9DLFNBQVNDLE9BQU8sQ0FHbkMsQ0FDSixDQUNKLFFBL0RhakQsa0JBK0RiIn0=
